---
/**
 * Root Index Page - Redirects to Default Language
 * 
 * This page redirects visitors from the root URL to the default language
 * version of the homepage (e.g., /en/ or based on browser preference).
 */
import { defaultLang, detectBrowserLanguage, languages } from '../i18n/utils';
import '../styles/global.css';

try {
  // Use the non-async browser language detection
  const detectedLang = detectBrowserLanguage();
  
  // Ensure the detected language is actually supported, otherwise use English
  const redirectLang = detectedLang && (detectedLang in languages) ? detectedLang : 'en';
  
  // Redirect to the detected or default language
  return Astro.redirect(`/${redirectLang}/`);
} catch (error) {
  // If anything goes wrong, redirect to English as a safe fallback
  console.error('Error in language detection, redirecting to English:', error);
  return Astro.redirect('/en/');
}
---

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Ricardo Almeida</title>
    <style>
      html, body {
        background-color: #2c2c2c;
        color: #fff;
        height: 100%;
        margin: 0;
        padding: 0;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      }
      .redirect-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        opacity: 0.2;
      }
      .redirect-text {
        font-size: 0.8rem;
      }
    </style>
    <script is:inline define:vars={{ defaultLang, languages }}>
      // Function to detect the browser language
      function detectBrowserLanguage() {
        try {
          const browserLang = navigator.language?.split('-')[0];
          
          // Check if browser language is directly supported
          if (browserLang && languages && browserLang in languages) {
            return browserLang;
          }
          
          // Otherwise return English as the safe default
          return 'en';
        } catch (e) {
          // If anything goes wrong, use English
          console.error('Error in client-side language detection:', e);
          return 'en';
        }
      }
      
      // Execute redirect immediately without painting the page
      const lang = detectBrowserLanguage();
      window.location.replace(`/${lang}/`);
    </script>
  </head>
  <body class="redirect-page">
    <div class="redirect-container">
      <span class="redirect-text">Redirecting...</span>
    </div>
  </body>
</html>