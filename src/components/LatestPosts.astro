---
/**
 * Latest Posts Component
 * 
 * A reusable component that displays the latest blog posts in two different layouts:
 * - Desktop: Main post (2/3 width) + 3 smaller posts vertically stacked (1/3 width)
 * - Mobile: Main post (full width) + 3 smaller posts vertically stacked (full width)
 * 
 * Dependencies:
 * - styles/components/latest-posts.css
 */
import { getCollection } from 'astro:content';
import FormattedDate from './FormattedDate.astro';
import '../styles/components/latest-posts.css';
import { useTranslations } from '../i18n/utils';

interface Props {
  lang: string;
  title?: string;
  maxPosts?: number;
  showSeeMore?: boolean;
}

const { lang, title, maxPosts = 4, showSeeMore = true } = Astro.props;
const t = useTranslations(lang);

// Get blog posts filtered by language and not draft, sorted by date (newest first)
const posts = await getCollection('blog', (post) => {
  return post.data.language === lang && post.data.draft !== true;
}).then(posts => posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)).then(posts => posts.slice(0, maxPosts));

// Split posts into main post and side posts
const mainPost = posts.length > 0 ? posts[0] : null;
const sidePosts = posts.length > 1 ? posts.slice(1, 4) : [];

// Default section title based on language
const sectionTitle = title || (lang === 'pt' ? 'Publicações Recentes' : 'Latest Posts');
---

<section class="latest-posts-section">
  <div class="section-header">
    <h2 class="section-heading">{sectionTitle}</h2>
    {showSeeMore && <a href={`/${lang}/blog/`} class="see-more-link">{t('blog.seeMore')}</a>}
  </div>
  
  {posts.length > 0 ? (
    <div class="latest-posts-container">
      {mainPost && (
        <div class="main-post">
          <a href={`/${lang}/blog/${mainPost.slug.replace(`${lang}/`, '')}/`} class="post-link">
            <div class="post-card main-post-card">
              {mainPost.data.heroImage ? (
                <div class="post-image-container">
                  <img 
                    src={mainPost.data.heroImage} 
                    alt="" 
                    class="post-image" 
                    onerror="this.style.display='none'" 
                  />
                  <div class="post-image-overlay card-overlay">
                    <!-- Title -->
                    <div class="overlay-title-container">
                      <h3 class="overlay-title">{mainPost.data.title}</h3>
                    </div>
                    
                    <!-- Meta info -->
                    <div class="overlay-meta-container">
                      <div class="overlay-meta">
                        <FormattedDate date={mainPost.data.pubDate} format="short" lang={lang} />
                        {mainPost.data.author && (
                          <>
                            <span class="overlay-separator">•</span> 
                            <span class="overlay-author">{mainPost.data.author}</span>
                          </>
                        )}
                        <span class="overlay-separator">•</span>
                        <span class="overlay-reading-time">{(mainPost.data as any).readTime || "1 min read"}</span>
                      </div>
                    </div>
                    
                    <!-- Tags -->
                    {mainPost.data.tags && mainPost.data.tags.length > 0 && (
                      <div class="overlay-tags-container">
                        <div class="image-overlay-tags">
                          {mainPost.data.tags.slice(0, 3).map((tag: string) => (
                            <span class="overlay-tag">{tag}</span>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              ) : (
                <div class="post-image-container">
                  <div class="post-image-placeholder" aria-hidden="true"></div>
                  <div class="post-image-overlay card-overlay">
                    <!-- Title -->
                    <div class="overlay-title-container">
                      <h3 class="overlay-title">{mainPost.data.title}</h3>
                    </div>
                    
                    <!-- Meta info -->
                    <div class="overlay-meta-container">
                      <div class="overlay-meta">
                        <FormattedDate date={mainPost.data.pubDate} format="short" lang={lang} />
                        {mainPost.data.author && (
                          <>
                            <span class="overlay-separator">•</span> 
                            <span class="overlay-author">{mainPost.data.author}</span>
                          </>
                        )}
                        <span class="overlay-separator">•</span>
                        <span class="overlay-reading-time">{(mainPost.data as any).readTime || "1 min read"}</span>
                      </div>
                    </div>
                    
                    <!-- Tags -->
                    {mainPost.data.tags && mainPost.data.tags.length > 0 && (
                      <div class="overlay-tags-container">
                        <div class="image-overlay-tags">
                          {mainPost.data.tags.slice(0, 3).map((tag: string) => (
                            <span class="overlay-tag">{tag}</span>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              )}
              <div class="post-content">
                {mainPost.data.heroSummary && (
                  <p class="post-description">{mainPost.data.heroSummary}</p>
                )}
              </div>
            </div>
          </a>
        </div>
      )}
      
      {sidePosts.length > 0 && (
        <div class="side-posts">
          {sidePosts.map((post) => (
            <a href={`/${lang}/blog/${post.slug.replace(`${lang}/`, '')}/`} class="post-link">
              <div class="post-card side-post-card" style={post.data.heroImage ? `background-image: url(${post.data.heroImage}); background-size: cover; background-position: center;` : ''}>
                <div class="side-post-overlay">
                  <!-- Title -->
                  <div class="side-post-title-container">
                    <h4 class="side-post-title">{post.data.title}</h4>
                  </div>
                  
                  <!-- Meta info -->
                  <div class="side-post-meta-container">
                    <div class="side-post-meta">
                      <FormattedDate date={post.data.pubDate} format="short" lang={lang} />
                      {post.data.author && (
                        <>
                          <span class="side-separator">•</span>
                          <span>{post.data.author}</span>
                        </>
                      )}
                      <span class="side-separator">•</span>
                      <span>{(post.data as any).readTime || "1 min read"}</span>
                    </div>
                  </div>
                  
                  <!-- Tags -->
                  {post.data.tags && post.data.tags.length > 0 && (
                    <div class="side-post-tags-container">
                      <div class="side-post-tags">
                        {post.data.tags.slice(0, 2).map((tag: string) => (
                          <span class="side-post-tag">{tag}</span>
                        ))}
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </a>
          ))}
        </div>
      )}
    </div>
  ) : (
    <p class="no-posts">{t('blog.noPostsMessage') || 'No posts available.'}</p>
  )}
</section> 