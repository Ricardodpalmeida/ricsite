---
/**
 * Page Header Component
 * 
 * A reusable header component for displaying profile image, name, title, and social links
 * Used in both home and about pages to ensure consistency
 */
import { getLangFromUrl } from '../i18n/utils';

interface Props {
  profileData: any;
  currentLanguage?: string;
}

const { profileData, currentLanguage } = Astro.props;
const lang = currentLanguage || getLangFromUrl(Astro.url);

// Helper function to safely get data with fallbacks
const safeGet = (obj: any, path: string, defaultValue = '') => {
  try {
    if (!obj) return defaultValue;
    
    const keys = path.split('.');
    let result = obj;
    
    for (const key of keys) {
      if (result === undefined || result === null) return defaultValue;
      result = result[key];
    }
    
    return result === undefined || result === null ? defaultValue : result;
  } catch (e) {
    console.error('Error in safeGet:', e);
    return defaultValue;
  }
};

// Get profile info based on language
const isMultilingual = profileData?.personal && (profileData.personal.en || profileData.personal.pt);
const name = isMultilingual 
  ? safeGet(profileData, `personal.${lang}.name`) || safeGet(profileData, 'personal.en.name', 'Ricardo Almeida')
  : safeGet(profileData, 'personal.name', 'Ricardo Almeida');

const title = isMultilingual 
  ? safeGet(profileData, `personal.${lang}.title`) || safeGet(profileData, 'personal.en.title', 'Manager, Data & AI | Smart Products, Automation and Gen AI')
  : safeGet(profileData, 'personal.title', 'Manager, Data & AI | Smart Products, Automation and Gen AI');

const profileUrl = isMultilingual
  ? safeGet(profileData, `personal.${lang}.profileUrl`) || safeGet(profileData, 'personal.en.profileUrl', 'https://www.linkedin.com/in/ricardodpa')
  : safeGet(profileData, 'personal.profileUrl', 'https://www.linkedin.com/in/ricardodpa');

// Localized aria labels
const linkedinLabel = lang === 'en' ? 'LinkedIn profile' : 'Perfil do LinkedIn';
const githubLabel = lang === 'en' ? 'GitHub profile' : 'Perfil do GitHub';
---

<div class="page-header">
  <div class="hero-section">
    <div class="hero-content">
      <div class="profile-circle">
        <img 
          src="/images/profile.png" 
          alt={name} 
          class="profile-image"
          loading="eager"
        />
      </div>
      <div class="hero-title-container">
        <h1 class="hero-title">{name}</h1>
        <p class="hero-subtitle">
          {title}
        </p>
      </div>
      <div class="hero-social-links">
        <a 
          href={profileUrl} 
          target="_blank" 
          rel="noopener noreferrer" 
          class="hero-social-link"
          aria-label={linkedinLabel}
        >
          <img src="/icons/linkedin.svg" alt="LinkedIn" class="social-icon" width="16" height="16" />
        </a>
        <a 
          href="https://github.com/Ricardodpalmeida" 
          target="_blank" 
          rel="noopener noreferrer" 
          class="hero-social-link"
          aria-label={githubLabel}
        >
          <img src="/icons/github.svg" alt="GitHub" class="social-icon" width="16" height="16" />
        </a>
      </div>
      <div class="header-description">
        <slot />
      </div>
    </div>
  </div>
</div>

<style>
  /* Hero Section */
  .hero-section {
    margin-bottom: 0;
    padding: 0;
  }
  
  .hero-content {
    margin: 0 auto;
  }
  
  .profile-circle {
    width: 120px;
    height: 120px;
    margin: 0 auto 2rem;
    border-radius: 50%;
    overflow: hidden;
    border: 3px solid var(--color-cosmic-latte);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .profile-circle:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
  }
  
  .profile-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .hero-title-container {
    text-align: center;
    margin-bottom: 0.5rem;
  }
  
  .hero-title {
    text-align: center;
    font-size: var(--font-size-3xl);
    margin-bottom: 0.5rem;
    font-family: var(--font-family-title);
    position: relative;
  }
  
  .hero-title::after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: -3px;
    width: 0;
    height: 2px;
    background-color: var(--color-cosmic-latte);
    transition: width 0.3s ease, left 0.3s ease;
    transform: translateX(-50%);
  }
  
  .hero-title:hover::after {
    width: 120px;
  }
  
  .hero-subtitle {
    text-align: center;
    font-size: var(--font-size-lg);
    color: var(--color-cosmic-latte);
    margin-bottom: 1.5rem;
    font-weight: var(--font-weight-medium);
    font-family: var(--font-family-title);
    position: relative;
  }
  
  .hero-subtitle::after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: -5px;
    width: 0;
    height: 1px;
    background-color: var(--color-cosmic-latte);
    transition: width 0.3s ease, left 0.3s ease;
    transform: translateX(-50%);
  }
  
  .hero-subtitle:hover::after {
    width: 80px;
  }
  
  .hero-social-links {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    margin-top: 0.5rem;
    margin-bottom: 1.5rem;
  }
  
  .hero-social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-base);
    border-radius: 50%;
    padding: 0.3rem;
    background-color: rgba(255, 255, 255, 0.05);
    width: 24px;
    height: 24px;
  }
  
  .hero-social-link:hover {
    transform: translateY(-2px);
    background-color: rgba(255, 255, 255, 0.1);
  }
  
  .hero-social-link:hover .social-icon {
    transform: scale(1.1);
  }

  .header-description {
    text-align: center;
    margin-top: 2rem;
    margin-bottom: 2rem;
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: var(--font-size-2xl);
    }
    
    .hero-subtitle {
      font-size: var(--font-size-lg);
    }
  }
</style> 