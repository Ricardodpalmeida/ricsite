# Prevent access to content directories
<IfModule mod_rewrite.c>
  RewriteEngine On
  
  # Prevent direct access to content files
  RewriteRule ^content/.*$ - [F,L]
  RewriteRule ^src/content/.*$ - [F,L]
  RewriteRule ^profile/.*$ - [F,L]
  RewriteRule ^data\.json$ - [F,L]
  RewriteRule ^profile-data\.json$ - [F,L]
  RewriteRule ^.*\.json$ - [F,L]
  
  # Redirect root to dynamic language detection
  RewriteRule ^$ /index.html [L]
  
  # If a requested file or directory doesn't exist, serve the 404 page
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /404 [L,R=302]
</IfModule>

# Prevent directory listing
Options -Indexes

# Add security headers
<IfModule mod_headers.c>
  # Security headers
  Header always set X-Content-Type-Options "nosniff"
  Header always set X-XSS-Protection "1; mode=block"
  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; frame-src 'self' https://open.spotify.com https://*.spotify.com https://*.mixcloud.com https://player-widget.mixcloud.com; connect-src 'self' https://*.sentry.io https://*.ingest.sentry.io https://o22381.ingest.us.sentry.io https://sentry.io https://*.cloudflareinsights.com https://static.cloudflareinsights.com https://*.spotify.com https://*.mixcloud.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.spotify.com https://*.mixcloud.com https://www.google.com https://www.gstatic.com https://*.cloudflareinsights.com https://static.cloudflareinsights.com; frame-ancestors 'self';"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  Header always set Permissions-Policy "geolocation=(), camera=(), microphone=()"
  
  # Cookie Security
  Header always edit Set-Cookie (.*) "$1; SameSite=Strict; Secure"
  Header always set Set-Cookie-Flag "HttpOnly; Secure; SameSite=Strict"

  # CORS settings for embedded content
  <FilesMatch "\.(html|htm|xml|js|css)$">
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header set Access-Control-Allow-Headers "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type"
  </FilesMatch>
  
  # Proper Content-Type charset for HTML and text files
  <FilesMatch "\.(html|htm)$">
    Header always set Content-Type "text/html; charset=UTF-8"
  </FilesMatch>
  <FilesMatch "\.(css)$">
    Header always set Content-Type "text/css; charset=UTF-8"
  </FilesMatch>
  <FilesMatch "\.(js)$">
    Header always set Content-Type "text/javascript; charset=UTF-8"
  </FilesMatch>
  <FilesMatch "\.(txt)$">
    Header always set Content-Type "text/plain; charset=UTF-8"
  </FilesMatch>
  <FilesMatch "\.(ts|tsx)$">
    Header always set Content-Type "text/x-typescript; charset=UTF-8"
  </FilesMatch>
  
  # Image content types
  <FilesMatch "\.(jpg|jpeg)$">
    Header always set Content-Type "image/jpeg"
  </FilesMatch>
  <FilesMatch "\.(png)$">
    Header always set Content-Type "image/png"
  </FilesMatch>
  <FilesMatch "\.(gif)$">
    Header always set Content-Type "image/gif"
  </FilesMatch>
  <FilesMatch "\.(webp)$">
    Header always set Content-Type "image/webp"
  </FilesMatch>
  <FilesMatch "\.(svg)$">
    Header always set Content-Type "image/svg+xml"
  </FilesMatch>
  <FilesMatch "\.(ico)$">
    Header always set Content-Type "image/x-icon"
  </FilesMatch>
  
  # Audio/Video content types
  <FilesMatch "\.(mp4)$">
    Header always set Content-Type "video/mp4"
  </FilesMatch>
  <FilesMatch "\.(mp3)$">
    Header always set Content-Type "audio/mpeg"
  </FilesMatch>
  
  # Force all responses to have basic headers
  Header always set X-Content-Type-Options "nosniff"
  Header always set Cache-Control "max-age=31536000, public, immutable" "expr=%{REQUEST_URI} =~ m#\.(ico|pdf|jpg|jpeg|png|gif|webp|svg|js|css|woff|woff2|ttf|eot)$#"
  Header always set Cache-Control "no-cache, no-store, must-revalidate" "expr=%{REQUEST_URI} =~ m#\.(html|htm)$#"
  Header always set Cache-Control "max-age=86400, public, must-revalidate" "expr=%{REQUEST_URI} =~ m#\.(json|xml)$#"
  Header always set Cache-Control "max-age=0, private, must-revalidate" "expr=%{REQUEST_URI} !~ m#\.(ico|pdf|jpg|jpeg|png|gif|webp|svg|js|css|woff|woff2|ttf|eot|html|htm|json|xml)$#"
</IfModule>

# Protect specific file types
<FilesMatch "\.(json|md|mdx)$">
  <IfModule mod_authz_core.c>
    Require all denied
  </IfModule>
  <IfModule !mod_authz_core.c>
    Order deny,allow
    Deny from all
  </IfModule>
</FilesMatch>

# Allow language-specific paths and dynamic routes
<FilesMatch "^(index\.html|about\.html|blog\.html|[a-z]{2,5}/.*)$">
  <IfModule mod_authz_core.c>
    Require all granted
  </IfModule>
  <IfModule !mod_authz_core.c>
    Order allow,deny
    Allow from all
  </IfModule>
</FilesMatch> 